@use "Variables" as *;
@use "Mixins" as *;
//---------------------------------------------------------------------------------------------//
//===================================== default settings ======================================//
//---------------------------------------------------------------------------------------------//
html {
  scroll-behavior: smooth;
  scroll-padding-top: calc(var(--h-navbar) + 2em);
}
body {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// ? disable default spin on input type="number"
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  /* display: none; <- Crashes Chrome on hover */
  -webkit-appearance: none;
  margin: 0; /* <-- Apparently some margin are still there even though it's hidden */
}

/* Firefox */
input[type=number] {
  appearance: textfield;
  -moz-appearance: textfield;
}

//---------------------------------------------------------------------------------------------//
//============================== delete-config-default-vuetify ================================//
//---------------------------------------------------------------------------------------------//
:is(.theme--light, .theme--dark) {box-shadow: none}
:is(.v-list, .v-sheet, .v-dialog, .v-menu__content) {box-shadow: none !important}
/* card */
div.v-card:is([class*="div"], [class*="space"], [class*="center"], [class*="start"], [class*="end"], [class*="wrap"]):not([class^="t"])
{display: flex}
div.v-card:is([class*="grid"]) {display: grid}
div.v-card::before {background: transparent !important}
/* .v-overlay__scrim {background: transparent !important} */



//---------------------------------------------------------------------------------------------//
//========================================= scrollbar =========================================//
//---------------------------------------------------------------------------------------------//
@include reducedMotion {
  ::-webkit-scrollbar {
    width: var(--w-scroll);
    height: var(--w-scroll);
    background: $secondary;
    // &:hover {background: $secondary}
  }
  ::-webkit-scrollbar-thumb {
    border-radius: 15px;
    background: $primary;
  }
  body {
    &::-webkit-scrollbar {
      width: calc(var(--w-scroll) + 6px);
      height: calc(var(--w-scroll) + 6px)
    }
  }
}



//---------------------------------------------------------------------------------------------//
//======================================= defautl color =======================================//
//---------------------------------------------------------------------------------------------//
:is(span, p, a, h1, h2, h3, h4, h5, h6, label, button, ul, img, button i, div i, input, textarea, th, td, .v-list-item__title,
.v-tab, .v-input .v-input__slot *, .v-data-footer__select, .v-data-footer__pagination, .v-data-footer__icons::before):not(.not_clr, .not) {
  -webkit-text-stroke: var(--stroke, initial);
  -moz-text-stroke: var(--stroke, initial);
  -ms-text-stroke: var(--stroke, initial);
  -o-text-stroke: var(--stroke, initial);
}

body {background: $bg-app}
.v-application {
  background: center no-repeat fixed $bg-app !important;
  background-size: cover !important;
}

* {caret-color: var(--caret, rgb(var(--v-theme-primary))) !important}
::selection {
  background-color: #ff4081;
  color: $bg-app;
}
:-webkit-autofill {
  -webkit-text-fill-color: rgb(var(--v-theme-primary));
  box-shadow: 0 0 0px 1000px #000 inset;
}
.v-input__slot::before {background: var(--text)}
.v-input:hover {
  .v-input__slot::before {border-color: var(--input-hover, rgb(var(--v-theme-surface))); opacity: .4}
}
//======= elements-active =======//
// :is(.primary--text, button[type].primary--text):not(.not_clr, .not) {
//   color: var(--active) !important;
  
//   :is(span, i) {color: var(--active) !important}
  
//   .v-input__slot::after {
//     background: var(--active) !important;
//     border-color: var(--active) !important;
//   }
// }

//======= active class =======//
.activeRipple {
  span {
    color: $primary !important;
    background-color: $primary !important
  }
}
.activeClass {
  background-color: $primary !important;
  color: #fff !important;
  & * {color: #fff !important}
}
.activeClass2 {
  background-color: $primary !important;
  border: 1px solid #000000 !important;
  color: #fff !important;
  & * {color: #fff !important}
}

.activeBtn {
  transition: .5s $ease-return;
  &::after, &::before {display: none !important}
  &:active {
    box-shadow: inset 0 6px 4px 0px rgba(0, 0, 0, .3) !important;
  }
}


//---------------------------------------------------------------------------------------------//
//===================================== transition routes =====================================//
//---------------------------------------------------------------------------------------------//

//======= pages =======//
// .page-enter-active,
// .page-leave-active {
//   transition: opacity 150ms $ease-slide;
//   transition-delay: .2s, 0s;
// }
// .page-enter,
// .page-leave-to {
//   opacity: 0;
// }

//-- layouts --//
.layout-enter-active,
.layout-leave-active {
  transition: opacity 150ms $ease-slide;
  transition-delay: .2s, 0s;
}
.layout-enter,
.layout-leave-active {
  opacity: 0;
}



//---------------------------------------------------------------------------------------------//
//======================================== html (tags) ========================================//
//---------------------------------------------------------------------------------------------//
img:not(.not_html, .not, .v-img__img) {
  --bg: none;
  --max-w: none;
  --min-w: none;
  --max-h: none;
  --min-h: none;
  --ar: initial;
  --p: none;
  --b: none;
  --br: initial;
  --bs: initial;
  --f: none;
  --t: initial;
  --of: initial;
  
  background: var(--bg) !important;
  max-width: var(--max-w);
  min-width: var(--min-w);
  max-height: var(--max-h);
  min-height: var(--min-h);
  aspect-ratio: var(--ar);
  padding: var(--p);
  border: var(--b);
  border-radius: var(--br);
  box-shadow: var(--bs);
  transform: var(--t);
  object-fit: var(--of);
  filter: var(--f);
}
